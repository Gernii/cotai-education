import type { CourseProps } from "./types";
import { CourseIds } from "./constants";
import { ProgramIds } from "../programs/constants";
import {
    PUBLIC_COURSE_PRICE_ML4AI,
    PUBLIC_COURSE_REGISTER_URL_ML4AI,
    PUBLIC_HOSTNAME,
} from "$env/static/public";
import CurriculumML4AI1 from "$lib/assets/images/course/ml4ai/1.jpg?imagetools";
import CurriculumML4AI2 from "$lib/assets/images/course/ml4ai/2.jpg?imagetools";
import CurriculumML4AI3 from "$lib/assets/images/course/ml4ai/3.jpg?imagetools";
import CurriculumML4AI4 from "$lib/assets/images/course/ml4ai/4.jpg?imagetools";
import CurriculumML4AI6 from "$lib/assets/images/course/ml4ai/6.jpg?imagetools";
import CurriculumML4AI7 from "$lib/assets/images/course/ml4ai/7.jpg?imagetools";
import CurriculumML4AI8 from "$lib/assets/images/course/ml4ai/8.jpg?imagetools";
import CurriculumML4AI9 from "$lib/assets/images/course/ml4ai/9.jpg?imagetools";
import CurriculumML4AI10 from "$lib/assets/images/course/ml4ai/10.jpg?imagetools";
import CurriculumML4AI11 from "$lib/assets/images/course/ml4ai/11.jpg?imagetools";
import CurriculumExam from "$lib/assets/images/course/exam.jpg?imagetools";
import CurriculumProjectReport from "$lib/assets/images/course/project-report.jpg?imagetools";
import { routerPath } from "$lib/utils/constants";
import { SkillTypes } from "$lib/features/skill-icons/constant";

export const dataCourseML4AI = (): CourseProps => {
    const id = CourseIds.ml4ai;
    return {
        id,
        title: "Machine Learning for AI",
        shortTitle: "ML4AI",
        price: Number.parseInt(PUBLIC_COURSE_PRICE_ML4AI),
        studyTypes: ["online", "selfPaced"],
        nextCourseId: CourseIds.dl4ai,
        hideCurriculumImages: true,

        programId: ProgramIds.public_training,

        registerUrl: PUBLIC_COURSE_REGISTER_URL_ML4AI,

        learningOutcomes: [
            "N·∫Øm v·ªØng quy tr√¨nh & k·ªπ nƒÉng x·ª≠ l√Ω d·ªØ li·ªáu",
            "Bi·∫øt c√°ch khai th√°c c√°c t√†i nguy√™n ngu·ªìn m·ªü ƒë·ªÉ s√°ng t·∫°o c√°c ·ª©ng d·ª•ng AI",
            "Th√†nh th·∫°o x√¢y d·ª±ng, hu·∫•n luy·ªán, ƒë√°nh gi√° & c·∫£i thi·ªán m√¥ h√¨nh AI v·ªõi PyTorch",
        ],

        experienceRequirement: [
            "S·ª≠ d·ª•ng t·ªët Python",
            "C√≥ ki·∫øn th·ª©c v·ªÅ ƒê·∫°i S·ªë Tuy·∫øn T√≠nh (Linear Algebra) v√† To√°n Gi·∫£i T√≠ch (Calculus)",
            "Bi·∫øt s·ª≠ d·ª•ng th∆∞ vi·ªán Python: numpy v√† pandas",
        ],
        whoShouldJoin: [
            `ƒë√£ bi·∫øt *l·∫≠p tr√¨nh* To√°n ma tr·∫≠n (t∆∞∆°ng ƒë∆∞∆°ng kho√° [MC4AI](${PUBLIC_HOSTNAME}${routerPath.courseId(CourseIds.mc4ai)}) c·ªßa CoTAI)`,
            "mu·ªën x√¢y d·ª±ng v√† hu·∫•n luy·ªán AI th√†nh th·∫°o nh∆∞ m·ªôt k·ªπ s∆∞",
        ],
        skills: [
            SkillTypes.python,
            SkillTypes.numpy,
            SkillTypes.pandas,
            SkillTypes.scikitLearn,
            SkillTypes.keras,
            SkillTypes.matplotlib,
            SkillTypes.plotly,
            SkillTypes.streamlit,
            SkillTypes.pillow,
            SkillTypes.opencv,
            SkillTypes.github,
            SkillTypes.markdown,
            SkillTypes.latex,
        ],
        archives: [
            {
                title: "Hi·ªÉu bi·∫øt v·ªÅ d·ªØ li·ªáu",
                description:
                    "H·ªçc c√°ch thu th·∫≠p, x·ª≠ l√Ω v√† ph√¢n t√≠ch d·ªØ li·ªáu, gi√∫p h·ªç hi·ªÉu r√µ ngu·ªìn g·ªëc v√† √Ω nghƒ©a c·ªßa d·ªØ li·ªáu trong c√°c b√†i to√°n AI",
            },
            {
                title: "S·ª≠ d·ª•ng th∆∞ vi·ªán PyTorch ƒë·ªÉ x√¢y d·ª±ng v√† hu·∫•n luy·ªán m√¥ h√¨nh AI",
                description:
                    "Bi·∫øt c√°ch x√¢y d·ª±ng, hu·∫•n luy·ªán v√† tinh ch·ªânh c√°c m√¥ h√¨nh h·ªçc m√°y (Machine Learning) v√† m·∫°ng neuron (Neural Networks) ƒë·ªÉ gi·∫£i quy·∫øt c√°c v·∫•n ƒë·ªÅ th·ª±c ti·ªÖn",
            },
            {
                title: "·ª®ng d·ª•ng th·ª±c t·∫ø",
                description:
                    "√Åp d·ª•ng c√°c k·ªπ thu·∫≠t v√† m√¥ h√¨nh AI v√†o c√°c lƒ©nh v·ª±c th·ª±c t·∫ø nh∆∞ nh·∫≠n di·ªán h√¨nh ·∫£nh, x·ª≠ l√Ω ng√¥n ng·ªØ t·ª± nhi√™n, h·ªá th·ªëng g·ª£i √Ω v√† d·ª± ƒëo√°n",
            },
            {
                title: "ƒê√°nh gi√° v√† c·∫£i thi·ªán m√¥ h√¨nh",
                description:
                    "C√°c ki·ªÉu d·ªØ li·ªáu c∆° b·∫£n, c√°c c·∫•u tr√∫c l·ªánh, h√†m ph·ªï bi·∫øn nh·∫•t c·ªßa Python. C√°c k·ªπ thu·∫≠t l·∫≠p tr√¨nh c∆° b·∫£n th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng trong AI",
            },
            {
                title: "Ph√°t tri·ªÉn t∆∞ duy logic v√† k·ªπ nƒÉng gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ",
                description:
                    "C√°c b√†i t·∫≠p th·ª±c h√†nh v√† d·ª± √°n cu·ªëi kh√≥a gi√∫p h·ªçc vi√™n r√®n luy·ªán t∆∞ duy logic v√† kh·∫£ nƒÉng gi·∫£i quy·∫øt c√°c v·∫•n ƒë·ªÅ ph·ª©c t·∫°p",
            },
            {
                title: "Ph√°t tri·ªÖn k·ªπ nƒÉng l·∫≠p tr√¨nh",
                description:
                    "Ph√°t tri·ªÉn k·ªπ nƒÉng l·∫≠p tr√¨nh, ƒë·∫∑c bi·ªát l√† v·ªõi ng√¥n ng·ªØ Python, m·ªôt trong nh·ªØng ng√¥n ng·ªØ ph·ªï bi·∫øn nh·∫•t trong lƒ©nh v·ª±c AI v√† h·ªçc m√°y",
            },
        ],
        description: `*H·ªçc m√°y* (Machine Learning) l√† b·ªô c√¥ng c·ª• ƒë·ªÉ ta x√¢y d·ª±ng c√°c "h√†m tr√≠ tu·ªá", t·∫°o n√™n "ki·∫øn th·ª©c & k·ªπ nƒÉng" cho AI t·ª´ d·ªØ li·ªáu. ƒê√¢y c≈©ng ch√≠nh l√† m·ª•c ti√™u c·ªßa kh√≥a h·ªçc ML4AI: gi√∫p h·ªçc vi√™n n·∫Øm v·ªØng c√°c nguy√™n l√Ω c·ªët l√µi & m√¥ h√¨nh n·ªÅn t·∫£ng c·ªßa ng√†nh H·ªçc m√°y cho h·∫ßu h·∫øt c√°c b√†i to√°n AI. Kho√° h·ªçc d√†nh cho c√°c h·ªçc vi√™n ƒë√£ ho√†n th√†nh kh√≥a MC4AI c·ªßa CoTAI ho·∫∑c c√≥ ki·∫øn th·ª©c & k·ªπ nƒÉng *l·∫≠p tr√¨nh To√°n cho AI* t∆∞∆°ng ƒë∆∞∆°ng (c·∫ßn l√†m b√†i ki·ªÉm tra ƒë·∫ßu v√†o).`,
        descriptionMore: `üî• Ph∆∞∆°ng ph√°p ƒë√†o t·∫°o tƒÉng t·ªëc *nhanh th√†nh t√†i* Accelerated Mastery c·ªßa CoTAI gi√∫p c√¥ ƒë·ªçng c·∫£ m·ªôt ng√†nh h·ªçc xu·ªëng th√†nh m·ªôt kho√° ng·∫Øn h·∫°n *hi·ªáu qu·∫£ cao*, v·ªõi 6 ch·ªß ƒë·ªÅ ch√≠nh:
- 1Ô∏è‚É£ Representations (feature extraction): tr√≠ch xu·∫•t ƒë·∫∑c tr∆∞ng bi·ªÉu di·ªÖn th√†nh to·∫° ƒë·ªô nh√∫ng. 
- 2Ô∏è‚É£ Evaluation (metrics & losses): c√°c chu·∫©n ƒë√°nh gi√° m√¥ h√¨nh v√† h√†m l·ªói.
- 3Ô∏è‚É£ Search (optimize/train/learn): hu·∫•n luy·ªán m√¥ h√¨nh, t·ªëi ∆∞u tham s·ªë.
- 4Ô∏è‚É£ Linear & nonlinear predictors (regression, classification, clustering): C√°c m√¥ h√¨nh d·ª± ƒëo√°n tuy·∫øn t√≠nh & phi tuy·∫øn cho c√°c b√†i to√°n c∆° s·ªü nh∆∞ d·ª± b√°o gi√° tr·ªã, ph√¢n lo·∫°i, gom nh√≥m.
- 5Ô∏è‚É£ CNNs & RNNs: C√°c m·∫°ng t√≠ch ch·∫≠p & m·∫°ng h·ªìi quy bi·ªÉu di·ªÖn d·ªØ li·ªáu chu·ªói trong kh√¥ng gian & th·ªùi gian.
- 6Ô∏è‚É£ Decision-making: C√°c b√†i to√°n suy lu·∫≠n, l√™n k·∫ø ho·∫°ch & ra quy·∫øt ƒë·ªãnh b·∫±ng h·ªá khuy·∫øn ngh·ªã (RecSys), m√¥ h√¨nh r·ª´ng c√¢y quy·∫øt ƒë·ªãnh (Decision Tree & Forest), m√¥ h√¨nh Markov (MDP) v√† h·ªçc tƒÉng c∆∞·ªùng (Reinforcement Learning)`,

        components: [],

        curriculum: [
            {
                title: "S1. Representation",
                images: [CurriculumML4AI1],

                details: {
                    content: `- H·ªçc c√°ch bi·ªÉu di·ªÖn ki·∫øn th·ª©c, kh√°i ni·ªám trong cu·ªôc s·ªëng b·∫±ng nh·ªØng con s·ªë (vector) ƒë·ªÉ ƒë∆∞a v√†o m√°y t√≠nh.
    - B√†i t·∫≠p ·ª©ng d·ª•ng: 
      - H·ªá th·ªëng "Nh·∫≠n di·ªán khu√¥n m·∫∑t"
      - Game: t√¨m t·ª´ c√≥ c√πng ng·ªØ nghƒ©a trong ti·∫øng Anh.
      - M√¥ h√¨nh AI t·∫°o sinh ·∫£nh khu√¥n m·∫∑t m·ªõi.`,
                },
            },
            {
                title: "S2. Linear Predictor",
                images: [CurriculumML4AI2],

                details: {
                    content: `- H·ªçc v·ªÅ nguy√™n l√Ω ƒë·ªÉ t·∫°o ra c√°c m√¥ h√¨nh AI c∆° b·∫£n nh·∫•t - **m√¥ h√¨nh tuy·∫øn t√≠nh** - ƒë·ªÉ d·ª± b√°o / ph√¢n lo·∫°i.
    - B√†i t·∫≠p ·ª©ng d·ª•ng: 
      - M√¥ h√¨nh AI nh·∫≠n di·ªán v√† khoanh v√πng ch√≥, m√®o.
      - M√¥ h√¨nh AI nh·∫≠n d·∫°ng ch·ªØ s·ªë vi·∫øt tay.`,
                },
            },
            {
                title: "S3. Multi-Layer Perceptron (MLP)",
                images: [CurriculumML4AI3],
                details: {
                    content: `- H·ªçc v·ªÅ m·∫°ng neuron nh√¢n t·∫°o: m·ªôt lo·∫°i m√¥ h√¨nh m√¥ ph·ªèng c√°ch n√£o ng∆∞·ªùi x·ª≠ l√Ω th√¥ng tin v√† l√† n·ªÅn t·∫£ng c·ªßa c√°c m√¥ h√¨nh h·ªçc s√¢u (Deep Learning).
    - B√†i t·∫≠p ·ª©ng d·ª•ng: 
      - Case Study: Ph√¢n t√≠ch l·ªói sai c·ªßa m√¥ h√¨nh khi d·ª± ƒëo√°n.
      - Th√¥ng qua **m√¥ h√¨nh AI t√°i t·∫°o ch·ªØ vi·∫øt tay**, t·ª´ ƒë√≥ t√¨m hi·ªÉu v√† tr·∫£ l·ªùi c√¢u h·ªèi "Li·ªáu m√¥ h√¨nh AI c√≥ th·∫≠t s·ª± hi·ªÉu ƒë∆∞·ª£c h√¨nh ·∫£nh?"`,
                },
            },
            {
                title: "S4. Training Loss & Evaluation Metrics ‚Üí Optimization",
                images: [CurriculumML4AI4],

                details: {
                    content: `- Hi·ªÉu c√°ch m√°y t√≠nh v√† con ng∆∞·ªùi ƒë√°nh gi√° ch·∫•t l∆∞·ª£ng c·ªßa c√°c m√¥ h√¨nh AI, t·ª´ ƒë√≥ hi·ªÉu ƒë∆∞·ª£c kh√°i ni·ªám "h·ªçc - learning" trong Machine Learning.
    - B√†i t·∫≠p ·ª©ng d·ª•ng:
      - M√¥ h√¨nh AI ƒë√°nh gi√° b√¨nh lu·∫≠n ti·∫øng Anh c·ªßa kh√°ch h√†ng.`,
                },
            },
            {
                title: "S5. Ki·ªÉm tra gi·ªØa k·ª≥",
                images: [CurriculumExam],

                details: {
                    content: `- √în t·∫≠p v√† ƒë√°nh gi√° ki·∫øn th·ª©c h·ªçc ƒë∆∞·ª£c.
    - B√†i t·∫≠p ·ª©ng d·ª•ng:
      - M√¥ h√¨nh AI d·ª± b√°o nh√¢n vi√™n ngh·ªâ vi·ªác.
      - Case Study: Ph√¢n t√≠ch d·ªØ li·ªáu h√¨nh ·∫£nh b·∫±ng AI.`,
                },
            },
            {
                title: "S6. Convolutional Neural Networks (CNNs)",
                images: [CurriculumML4AI6],

                details: {
                    content: `- H·ªçc v·ªÅ m·∫°ng neuron t√≠ch ch·∫≠p, m·ªôt lo·∫°i m√¥ h√¨nh ƒë·∫∑c bi·ªát hi·ªáu qu·∫£ trong vi·ªác x·ª≠ l√Ω h√¨nh ·∫£nh.
    - B√†i t·∫≠p ·ª©ng d·ª•ng:
      - M√¥ h√¨nh AI ph√°t hi·ªán v·∫øt n·ª©t tr√™n b√™ t√¥ng.
      - M√¥ h√¨nh AI ph√¢n lo·∫°i l√° c√¢y b·ªã b·ªánh.
      - M√¥ h√¨nh AI nh·∫≠n di·ªán b√†n tay con ng∆∞·ªùi ‚Üí ph√°t hi·ªán th·ªß ng·ªØ.`,
                },
            },
            {
                title: "S7. Recurrent Neural Networks (RNNs)",
                images: [CurriculumML4AI7],

                details: {
                    content: `- H·ªçc v·ªÅ m·∫°ng neuron h·ªìi quy, m√¥ h√¨nh hi·ªáu qu·∫£ trong vi·ªác x·ª≠ l√Ω c√°c d·ªØ li·ªáu tu·∫ßn t·ª± nh∆∞ chu·ªói vƒÉn b·∫£n, √¢m thanh.
    - B√†i t·∫≠p ·ª©ng d·ª•ng:
      - M√¥ h√¨nh AI ƒë√°nh gi√° b√¨nh lu·∫≠n ti·∫øng Vi·ªát.`,
                },
            },
            {
                title: "S8. Recommender Systems",
                images: [CurriculumML4AI8],

                details: {
                    content: `- H·ªçc v·ªÅ h·ªá th·ªëng g·ª£i √Ω, m√¥ h√¨nh gi√∫p ƒë·ªÅ xu·∫•t s·∫£n ph·∫©m, d·ªãch v·ª• d·ª±a tr√™n s·ªü th√≠ch v√† h√†nh vi c·ªßa ng∆∞·ªùi d√πng.
    - B√†i t·∫≠p ·ª©ng d·ª•ng:
      - M√¥ h√¨nh AI g·ª£i √Ω phim / s√°ch cho ng∆∞·ªùi d√πng.`,
                },
            },
            {
                title: "S9. Decision Trees",
                images: [CurriculumML4AI9],

                details: {
                    content: `- H·ªçc v·ªÅ m√¥ h√¨nh "C√¢y quy·∫øt ƒë·ªãnh" ƒë·ªÉ ƒë∆∞a ra d·ª± b√°o v√† c√°ch di·ªÖn gi·∫£i "lu·ªìng quy·∫øt ƒë·ªãnh" c·ªßa m√¥ h√¨nh
    - B√†i t·∫≠p ·ª©ng d·ª•ng:
      - M√¥ h√¨nh AI ph√°t hi·ªán l√Ω do nh√¢n vi√™n ngh·ªâ vi·ªác.
      - M√¥ h√¨nh AI t·ªëi ∆∞u chi ph√≠ qu·∫£ng c√°o.`,
                },
            },
            {
                title: "S10. Markov Decision Process (MDP) Planning",
                images: [CurriculumML4AI10],

                details: {
                    content: `- H·ªçc v·ªÅ quy tr√¨nh Markov, gi√∫p AI c√≥ kh·∫£ nƒÉng l·∫≠p k·∫ø ho·∫°ch.
    - B√†i t·∫≠p ·ª©ng d·ª•ng:
      - AI t·ª± ch∆°i game ƒë∆°n gi·∫£n.`,
                },
            },
            {
                title: "S11. Reinforcement Q-Learning",
                images: [CurriculumML4AI11],

                details: {
                    content: `- H·ªçc v·ªÅ thu·∫≠t to√°n Q-Learning, m·ªôt ph∆∞∆°ng ph√°p gi√∫p m√°y t√≠nh t·ª± h·ªçc v√† ƒë∆∞a ra quy·∫øt ƒë·ªãnh d·ª±a v√†o d·ªØ li·ªáu.
    - B√†i t·∫≠p ·ª©ng d·ª•ng:
      - AI ch∆°i game FlappyBird.
      - AI ch∆°i game Taxi ƒë√≥n kh√°ch.`,
                },
            },
            {
                title: "S12. Ki·ªÉm tra cu·ªëi k·ª≥",
                images: [CurriculumExam],

                details: {
                    content: "√în t·∫≠p v√† ƒë√°nh gi√° ki·∫øn th·ª©c to√†n kh√≥a h·ªçc",
                },
            },
            {
                title: "S13. B√°o c√°o d·ª± √°n",
                images: [CurriculumProjectReport],

                details: {
                    content: "H·ªçc vi√™n tr√¨nh b√†y v·ªÅ d·ª± √°n cu·ªëi kh√≥a c·ªßa m√¨nh",
                },
            },
        ],
    };
};
